{
    "project": {
        "name": "Eve Ship Comparator API",
        "description": "A set of classes for interacting with Eve Online ship data.",
        "version": "0.0.1",
        "url": "http://eve-ship-comparator.herokuapp.com"
    },
    "files": {
        "client/js/views/compare-view.js": {
            "name": "client/js/views/compare-view.js",
            "modules": {
                "esc-compare-view": 1
            },
            "classes": {
                "esc.CompareView": 1
            },
            "fors": {},
            "namespaces": {
                "esc": 1
            }
        },
        "server/lib/select.js": {
            "name": "server/lib/select.js",
            "modules": {
                "esc-select": 1
            },
            "classes": {
                "esc.Criteria": 1,
                "esc.Select": 1
            },
            "fors": {},
            "namespaces": {
                "esc": 1
            }
        },
        "server/lib/sqlite.js": {
            "name": "server/lib/sqlite.js",
            "modules": {
                "esc-sqlite": 1
            },
            "classes": {
                "esc.Query": 1,
                "esc.Database": 1
            },
            "fors": {},
            "namespaces": {
                "esc": 1
            }
        },
        "shared/model/hp-pool.js": {
            "name": "shared/model/hp-pool.js",
            "modules": {
                "esc-hp-pool": 1
            },
            "classes": {
                "esc.DamageProfile": 1,
                "esc.HpPool": 1,
                "esc.Shield": 1
            },
            "fors": {},
            "namespaces": {
                "esc": 1
            }
        },
        "shared/model/ship-properties.js": {
            "name": "shared/model/ship-properties.js",
            "modules": {
                "esc-ship-properties": 1
            },
            "classes": {
                "esc.Sensors": 1,
                "esc.Heat": 1,
                "esc.Capacity": 1,
                "esc.Slots": 1,
                "esc.Drones": 1,
                "esc.JumpDrive": 1,
                "esc.Capacitor": 1
            },
            "fors": {},
            "namespaces": {
                "esc": 1
            }
        },
        "shared/model/ship.js": {
            "name": "shared/model/ship.js",
            "modules": {
                "esc-ship": 1
            },
            "classes": {
                "esc.Ship": 1
            },
            "fors": {},
            "namespaces": {
                "esc": 1
            }
        },
        "shared/model/skill.js": {
            "name": "shared/model/skill.js",
            "modules": {
                "esc-skill": 1
            },
            "classes": {
                "esc.Skill": 1,
                "esc.SkillRequirement": 1,
                "esc.SkillRequirements": 1
            },
            "fors": {},
            "namespaces": {
                "esc": 1
            }
        },
        "shared/utils/micro-template.js": {
            "name": "shared/utils/micro-template.js",
            "modules": {
                "esc-micro-template": 1
            },
            "classes": {
                "esc.MicroTemplate": 1
            },
            "fors": {},
            "namespaces": {
                "esc": 1
            }
        },
        "shared/utils/promise.js": {
            "name": "shared/utils/promise.js",
            "modules": {
                "esc-promise": 1
            },
            "classes": {
                "esc.Promise": 1,
                "esc.Promise.Resolver": 1
            },
            "fors": {},
            "namespaces": {
                "esc": 1
            }
        }
    },
    "modules": {
        "esc-compare-view": {
            "name": "esc-compare-view",
            "submodules": {},
            "classes": {
                "esc.CompareView": 1
            },
            "fors": {},
            "namespaces": {
                "esc": 1
            },
            "tag": "module",
            "file": "client/js/views/compare-view.js",
            "line": 12
        },
        "esc-select": {
            "name": "esc-select",
            "submodules": {},
            "classes": {
                "esc.Criteria": 1,
                "esc.Select": 1
            },
            "fors": {},
            "namespaces": {
                "esc": 1
            },
            "tag": "module",
            "file": "server/lib/select.js",
            "line": 166,
            "description": "A tool to make it easier to build complex SQL queries."
        },
        "esc-sqlite": {
            "name": "esc-sqlite",
            "submodules": {},
            "classes": {
                "esc.Query": 1,
                "esc.Database": 1
            },
            "fors": {},
            "namespaces": {
                "esc": 1
            },
            "tag": "module",
            "file": "server/lib/sqlite.js",
            "line": 81
        },
        "esc-hp-pool": {
            "name": "esc-hp-pool",
            "submodules": {},
            "classes": {
                "esc.DamageProfile": 1,
                "esc.HpPool": 1,
                "esc.Shield": 1
            },
            "fors": {},
            "namespaces": {
                "esc": 1
            },
            "tag": "module",
            "file": "shared/model/hp-pool.js",
            "line": 332,
            "description": "Objects, classes, and methods related to hit point pools for ships in Eve Online. Includes calculating EHP based on a number of strategies (EFT, and CCP's own calculations) and different damage profiles (Gursita, Amarr, Serpentis, etc.)."
        },
        "esc-ship-properties": {
            "name": "esc-ship-properties",
            "submodules": {},
            "classes": {
                "esc.Sensors": 1,
                "esc.Heat": 1,
                "esc.Capacity": 1,
                "esc.Slots": 1,
                "esc.Drones": 1,
                "esc.JumpDrive": 1,
                "esc.Capacitor": 1
            },
            "fors": {},
            "namespaces": {
                "esc": 1
            },
            "tag": "module",
            "file": "shared/model/ship-properties.js",
            "line": 183
        },
        "esc-ship": {
            "name": "esc-ship",
            "submodules": {},
            "classes": {
                "esc.Ship": 1
            },
            "fors": {},
            "namespaces": {
                "esc": 1
            },
            "tag": "module",
            "file": "shared/model/ship.js",
            "line": 22
        },
        "esc-skill": {
            "name": "esc-skill",
            "submodules": {},
            "classes": {
                "esc.Skill": 1,
                "esc.SkillRequirement": 1,
                "esc.SkillRequirements": 1
            },
            "fors": {},
            "namespaces": {
                "esc": 1
            },
            "tag": "module",
            "file": "shared/model/skill.js",
            "line": 114,
            "description": "Classes and objects having to do with skill requirements for ships."
        },
        "esc-micro-template": {
            "name": "esc-micro-template",
            "submodules": {},
            "classes": {
                "esc.MicroTemplate": 1
            },
            "fors": {},
            "namespaces": {
                "esc": 1
            },
            "tag": "module",
            "file": "shared/utils/micro-template.js",
            "line": 13
        },
        "esc-promise": {
            "name": "esc-promise",
            "submodules": {},
            "classes": {
                "esc.Promise": 1,
                "esc.Promise.Resolver": 1
            },
            "fors": {},
            "namespaces": {
                "esc": 1
            },
            "tag": "module",
            "file": "shared/utils/promise.js",
            "line": 113,
            "description": "Wraps the execution of asynchronous operations, providing a promise object that\ncan be used to subscribe to the various ways the operation may terminate.\n\nWhen the operation completes successfully, call the Resolver's `fulfill()`\nmethod, passing any relevant response data for subscribers.  If the operation\nencounters an error or is unsuccessful in some way, call `reject()`, again\npassing any relevant data for subscribers.\n\nThe Resolver object should be shared only with the code resposible for\nresolving or rejecting it. Public access for the Resolver is through its\n_promise_, which is returned from the Resolver's `promise` property. While both\nResolver and promise allow subscriptions to the Resolver's state changes, the\npromise may be exposed to non-controlling code. It is the preferable interface\nfor adding subscriptions.\n\nSubscribe to state changes in the Resolver with the promise's\n`then(callback, errback)` method.  `then()` wraps the passed callbacks in a\nnew Resolver and returns the corresponding promise, allowing chaining of\nasynchronous or synchronous operations. E.g.\n`promise.then(someAsyncFunc).then(anotherAsyncFunc)`"
        }
    },
    "classes": {
        "esc.CompareView": {
            "name": "esc.CompareView",
            "shortname": "CompareView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "esc-compare-view",
            "namespace": "esc",
            "file": "client/js/views/compare-view.js",
            "line": 12,
            "extends": "View"
        },
        "esc.Criteria": {
            "name": "esc.Criteria",
            "shortname": "Criteria",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "esc-select",
            "namespace": "esc",
            "file": "server/lib/select.js",
            "line": 13,
            "is_constructor": 1
        },
        "esc.Select": {
            "name": "esc.Select",
            "shortname": "Select",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "esc-select",
            "namespace": "esc",
            "file": "server/lib/select.js",
            "line": 166,
            "is_constructor": 1
        },
        "esc.Query": {
            "name": "esc.Query",
            "shortname": "Query",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "esc-sqlite",
            "namespace": "esc",
            "file": "server/lib/sqlite.js",
            "line": 21,
            "is_constructor": 1,
            "extends": "esc.Promise"
        },
        "esc.Database": {
            "name": "esc.Database",
            "shortname": "Database",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "esc-sqlite",
            "namespace": "esc",
            "file": "server/lib/sqlite.js",
            "line": 81,
            "is_constructor": 1,
            "extends": "esc.Promise"
        },
        "esc.DamageProfile": {
            "name": "esc.DamageProfile",
            "shortname": "DamageProfile",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "esc-hp-pool",
            "namespace": "esc",
            "file": "shared/model/hp-pool.js",
            "line": 17,
            "description": "A utility class that generates an EHP based on a provided HpPool instance.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "cfg",
                    "description": "A configuration object that accepts the following properties:\n\n* **em** - The proportion of EM damage.\n* **explosive** - The proportion of explosive damage.\n* **kinetic** - The proportion of kinetic damage.\n* **thermal** - The proportion of thermal damage.\n\nIf the sum of all four damage levels is greater than 1, they will all be normalized in relation to each other to enforce a total value of 1.\n\nFor example, passing `{ em: 1, explosive: 1, kinetic: 1, thermal: 1 }` will normalize each value to `0.25`.\n\nThe damage profiles defined as static properties on this object are taken from this site:\n<http://eve-survival.org/wikka.php?wakka=TankingGuide>",
                    "type": "Object"
                }
            ]
        },
        "esc.HpPool": {
            "name": "esc.HpPool",
            "shortname": "HpPool",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "esc-hp-pool",
            "namespace": "esc",
            "file": "shared/model/hp-pool.js",
            "line": 233,
            "description": "Represents one of the three HP 'pools' on a ship: shields, armor, and structure (hull)",
            "is_constructor": 1
        },
        "esc.Shield": {
            "name": "esc.Shield",
            "shortname": "Shield",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "esc-hp-pool",
            "namespace": "esc",
            "file": "shared/model/hp-pool.js",
            "line": 332,
            "description": "A descendant of the HpPool object that has additional features related to shield rechage rates.",
            "is_constructor": 1,
            "extends": "esc.HpPool"
        },
        "esc.Sensors": {
            "name": "esc.Sensors",
            "shortname": "Sensors",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "esc-ship-properties",
            "namespace": "esc",
            "file": "shared/model/ship-properties.js",
            "line": 15,
            "description": "A set of properties related to sensor strength, range, and max locked targets.",
            "is_constructor": 1
        },
        "esc.Heat": {
            "name": "esc.Heat",
            "shortname": "Heat",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "esc-ship-properties",
            "namespace": "esc",
            "file": "shared/model/ship-properties.js",
            "line": 54,
            "description": "Properties related to how a ship generates and sheds heat.",
            "is_constructor": 1
        },
        "esc.Capacity": {
            "name": "esc.Capacity",
            "shortname": "Capacity",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "esc-ship-properties",
            "namespace": "esc",
            "file": "shared/model/ship-properties.js",
            "line": 86,
            "description": "Properties related to how much junk a ship can hold.",
            "is_constructor": 1
        },
        "esc.Slots": {
            "name": "esc.Slots",
            "shortname": "Slots",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "esc-ship-properties",
            "namespace": "esc",
            "file": "shared/model/ship-properties.js",
            "line": 110,
            "description": "Properties related to how many modules a ship can be fitted with.",
            "is_constructor": 1
        },
        "esc.Drones": {
            "name": "esc.Drones",
            "shortname": "Drones",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "esc-ship-properties",
            "namespace": "esc",
            "file": "shared/model/ship-properties.js",
            "line": 136,
            "description": "A set of properties related to ship drone capacity and bandwidth.",
            "is_constructor": 1
        },
        "esc.JumpDrive": {
            "name": "esc.JumpDrive",
            "shortname": "JumpDrive",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "esc-ship-properties",
            "namespace": "esc",
            "file": "shared/model/ship-properties.js",
            "line": 157,
            "description": "A set of properties related to ship Jump Drives.",
            "is_constructor": 1
        },
        "esc.Capacitor": {
            "name": "esc.Capacitor",
            "shortname": "Capacitor",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "esc-ship-properties",
            "namespace": "esc",
            "file": "shared/model/ship-properties.js",
            "line": 183,
            "description": "A set of properties related to the size and charge rate of the capacitor.",
            "is_constructor": 1
        },
        "esc.Ship": {
            "name": "esc.Ship",
            "shortname": "Ship",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "esc-ship",
            "namespace": "esc",
            "file": "shared/model/ship.js",
            "line": 22,
            "is_constructor": 1,
            "params": [
                {
                    "name": "cfg",
                    "description": "An object literal describing a ship.",
                    "type": "Object"
                }
            ]
        },
        "esc.Skill": {
            "name": "esc.Skill",
            "shortname": "Skill",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "esc-skill",
            "namespace": "esc",
            "file": "shared/model/skill.js",
            "line": 17,
            "description": "A representation of a skill in the Eve skill tree. Matains a list of skills that are required to train this skill, as well as things like group, rank, and description.",
            "is_constructor": 1
        },
        "esc.SkillRequirement": {
            "name": "esc.SkillRequirement",
            "shortname": "SkillRequirement",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "esc-skill",
            "namespace": "esc",
            "file": "shared/model/skill.js",
            "line": 77,
            "description": "A representation of a required skill, either to fly a ship or as a prereq for a skill to fly a ship.",
            "is_constructor": 1
        },
        "esc.SkillRequirements": {
            "name": "esc.SkillRequirements",
            "shortname": "SkillRequirements",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "esc-skill",
            "namespace": "esc",
            "file": "shared/model/skill.js",
            "line": 114,
            "is_constructor": 1
        },
        "esc.MicroTemplate": {
            "name": "esc.MicroTemplate",
            "shortname": "MicroTemplate",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "esc-micro-template",
            "namespace": "esc",
            "file": "shared/utils/micro-template.js",
            "line": 13
        },
        "esc.Promise": {
            "name": "esc.Promise",
            "shortname": "Promise",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "esc-promise",
            "namespace": "esc",
            "file": "shared/utils/promise.js",
            "line": 45,
            "description": "The public API for a Resolver. Used to subscribe to the notification events for\nresolution or progress of the operation represented by the Resolver.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "fn",
                    "description": "A function where to insert the logic that resolves this\npromise. Receives `fulfill` and `reject` functions as parameters",
                    "type": "Function"
                }
            ]
        },
        "esc.Promise.Resolver": {
            "name": "esc.Promise.Resolver",
            "shortname": "Promise.Resolver",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "esc-promise",
            "namespace": "esc",
            "file": "shared/utils/promise.js",
            "line": 113,
            "description": "Represents an asynchronous operation. Provides a\nstandard API for subscribing to the moment that the operation completes either\nsuccessfully (`fulfill()`) or unsuccessfully (`reject()`).",
            "is_constructor": 1,
            "params": [
                {
                    "name": "promise",
                    "description": "The promise instance this resolver will be handling",
                    "type": "Promise"
                }
            ]
        }
    },
    "classitems": [
        {
            "file": "server/lib/select.js",
            "line": 38,
            "description": "The parent criteria for this instance.",
            "itemtype": "property",
            "name": "parent",
            "type": "esc.Criteria",
            "class": "esc.Criteria",
            "module": "esc-select",
            "namespace": "esc"
        },
        {
            "file": "server/lib/select.js",
            "line": 45,
            "description": "The child criteria for this instance.",
            "itemtype": "property",
            "name": "child",
            "type": "esc.Criteria",
            "class": "esc.Criteria",
            "module": "esc-select",
            "namespace": "esc"
        },
        {
            "file": "server/lib/select.js",
            "line": 52,
            "description": "The parent select statement.",
            "itemtype": "property",
            "name": "parentSelect",
            "type": "esc.Select",
            "class": "esc.Criteria",
            "module": "esc-select",
            "namespace": "esc"
        },
        {
            "file": "server/lib/select.js",
            "line": 59,
            "description": "Returns the select statement that this criteria is a part of, if one exists. If this Critiera doesn't know what select statement it is a part of, it will traverse the criteria tree until it finds it.",
            "itemtype": "method",
            "name": "select",
            "return": {
                "description": "The parent select object, if any.",
                "type": "esc.Select"
            },
            "class": "esc.Criteria",
            "module": "esc-select",
            "namespace": "esc"
        },
        {
            "file": "server/lib/sqlite.js",
            "line": 45,
            "itemtype": "method",
            "name": "each",
            "class": "esc.Query",
            "module": "esc-sqlite",
            "namespace": "esc"
        },
        {
            "file": "server/lib/sqlite.js",
            "line": 50,
            "itemtype": "method",
            "name": "every",
            "class": "esc.Query",
            "module": "esc-sqlite",
            "namespace": "esc"
        },
        {
            "file": "server/lib/sqlite.js",
            "line": 55,
            "itemtype": "method",
            "name": "some",
            "class": "esc.Query",
            "module": "esc-sqlite",
            "namespace": "esc"
        },
        {
            "file": "server/lib/sqlite.js",
            "line": 60,
            "itemtype": "method",
            "name": "filter",
            "class": "esc.Query",
            "module": "esc-sqlite",
            "namespace": "esc"
        },
        {
            "file": "server/lib/sqlite.js",
            "line": 65,
            "itemtype": "method",
            "name": "map",
            "class": "esc.Query",
            "module": "esc-sqlite",
            "namespace": "esc"
        },
        {
            "file": "server/lib/sqlite.js",
            "line": 70,
            "itemtype": "method",
            "name": "reduce",
            "class": "esc.Query",
            "module": "esc-sqlite",
            "namespace": "esc"
        },
        {
            "file": "server/lib/sqlite.js",
            "line": 75,
            "itemtype": "method",
            "name": "reduceRight",
            "class": "esc.Query",
            "module": "esc-sqlite",
            "namespace": "esc"
        },
        {
            "file": "server/lib/sqlite.js",
            "line": 90,
            "itemtype": "method",
            "name": "open",
            "static": 1,
            "class": "esc.Database",
            "module": "esc-sqlite",
            "namespace": "esc"
        },
        {
            "file": "server/lib/sqlite.js",
            "line": 107,
            "itemtype": "method",
            "name": "one",
            "params": [
                {
                    "name": "select",
                    "description": "",
                    "type": "esc.Select | String"
                }
            ],
            "return": {
                "description": "A query promise hooked to this instance's db.",
                "type": "esc.Query"
            },
            "class": "esc.Database",
            "module": "esc-sqlite",
            "namespace": "esc"
        },
        {
            "file": "server/lib/sqlite.js",
            "line": 131,
            "itemtype": "method",
            "name": "all",
            "params": [
                {
                    "name": "select",
                    "description": "",
                    "type": "esc.Select | String"
                }
            ],
            "return": {
                "description": "A query promise hooked to this instance's db.",
                "type": "esc.Query"
            },
            "class": "esc.Database",
            "module": "esc-sqlite",
            "namespace": "esc"
        },
        {
            "file": "server/lib/sqlite.js",
            "line": 155,
            "itemtype": "method",
            "name": "close",
            "return": {
                "description": "promise chain.",
                "type": "esc.Database"
            },
            "class": "esc.Database",
            "module": "esc-sqlite",
            "namespace": "esc"
        },
        {
            "file": "shared/model/hp-pool.js",
            "line": 51,
            "itemtype": "property",
            "name": "em",
            "type": "Number",
            "default": "0",
            "class": "esc.DamageProfile",
            "module": "esc-hp-pool",
            "namespace": "esc"
        },
        {
            "file": "shared/model/hp-pool.js",
            "line": 57,
            "itemtype": "property",
            "name": "explosive",
            "type": "Number",
            "default": "0",
            "class": "esc.DamageProfile",
            "module": "esc-hp-pool",
            "namespace": "esc"
        },
        {
            "file": "shared/model/hp-pool.js",
            "line": 63,
            "itemtype": "property",
            "name": "kinetic",
            "type": "Number",
            "default": "0",
            "class": "esc.DamageProfile",
            "module": "esc-hp-pool",
            "namespace": "esc"
        },
        {
            "file": "shared/model/hp-pool.js",
            "line": 69,
            "itemtype": "property",
            "name": "thermal",
            "type": "Number",
            "default": "0",
            "class": "esc.DamageProfile",
            "module": "esc-hp-pool",
            "namespace": "esc"
        },
        {
            "file": "shared/model/hp-pool.js",
            "line": 75,
            "itemtype": "method",
            "name": "ehp",
            "params": [
                {
                    "name": "hpPool",
                    "description": "An HpPool instance to generate an EHP value from.",
                    "type": "HpPool"
                }
            ],
            "return": {
                "description": "The EHP of that hit point pool.",
                "type": "Number"
            },
            "class": "esc.DamageProfile",
            "module": "esc-hp-pool",
            "namespace": "esc"
        },
        {
            "file": "shared/model/hp-pool.js",
            "line": 96,
            "description": "The standard even-distribution profile used by EFT.",
            "itemtype": "property",
            "name": "eft",
            "type": "esc.DamageProfile",
            "static": 1,
            "class": "esc.DamageProfile",
            "module": "esc-hp-pool",
            "namespace": "esc"
        },
        {
            "file": "shared/model/hp-pool.js",
            "line": 104,
            "description": "The Gurista damage profile.",
            "itemtype": "property",
            "name": "gurista",
            "type": "esc.DamageProfile",
            "static": 1,
            "class": "esc.DamageProfile",
            "module": "esc-hp-pool",
            "namespace": "esc"
        },
        {
            "file": "shared/model/hp-pool.js",
            "line": 110,
            "description": "The EOM damage profile.",
            "itemtype": "property",
            "name": "eom",
            "type": "esc.DamageProfile",
            "static": 1,
            "class": "esc.DamageProfile",
            "module": "esc-hp-pool",
            "namespace": "esc"
        },
        {
            "file": "shared/model/hp-pool.js",
            "line": 119,
            "description": "The Angel Cartell damage profile.",
            "itemtype": "property",
            "name": "angel",
            "type": "esc.DamageProfile",
            "static": 1,
            "class": "esc.DamageProfile",
            "module": "esc-hp-pool",
            "namespace": "esc"
        },
        {
            "file": "shared/model/hp-pool.js",
            "line": 127,
            "description": "The Sanshas Nation damage profile.",
            "itemtype": "property",
            "name": "sansha",
            "type": "esc.DamageProfile",
            "static": 1,
            "class": "esc.DamageProfile",
            "module": "esc-hp-pool",
            "namespace": "esc"
        },
        {
            "file": "shared/model/hp-pool.js",
            "line": 133,
            "description": "The Blood Raider Covenant damage profile.",
            "itemtype": "property",
            "name": "bloodRaider",
            "type": "esc.DamageProfile",
            "static": 1,
            "class": "esc.DamageProfile",
            "module": "esc-hp-pool",
            "namespace": "esc"
        },
        {
            "file": "shared/model/hp-pool.js",
            "line": 139,
            "description": "The Amarr Empire damage profile.",
            "itemtype": "property",
            "name": "amarr",
            "type": "esc.DamageProfile",
            "static": 1,
            "class": "esc.DamageProfile",
            "module": "esc-hp-pool",
            "namespace": "esc"
        },
        {
            "file": "shared/model/hp-pool.js",
            "line": 149,
            "description": "The Serpentis damage profile.",
            "itemtype": "property",
            "name": "serpentis",
            "type": "esc.DamageProfile",
            "static": 1,
            "class": "esc.DamageProfile",
            "module": "esc-hp-pool",
            "namespace": "esc"
        },
        {
            "file": "shared/model/hp-pool.js",
            "line": 155,
            "description": "The Caldari damage profile.",
            "itemtype": "property",
            "name": "caldari",
            "type": "esc.DamageProfile",
            "static": 1,
            "class": "esc.DamageProfile",
            "module": "esc-hp-pool",
            "namespace": "esc"
        },
        {
            "file": "shared/model/hp-pool.js",
            "line": 164,
            "description": "The Gallente Federation damage profile.",
            "itemtype": "property",
            "name": "gallente",
            "type": "esc.DamageProfile",
            "static": 1,
            "class": "esc.DamageProfile",
            "module": "esc-hp-pool",
            "namespace": "esc"
        },
        {
            "file": "shared/model/hp-pool.js",
            "line": 172,
            "description": "The Minmatar damage profile.",
            "itemtype": "property",
            "name": "minmatar",
            "type": "esc.DamageProfile",
            "static": 1,
            "class": "esc.DamageProfile",
            "module": "esc-hp-pool",
            "namespace": "esc"
        },
        {
            "file": "shared/model/hp-pool.js",
            "line": 180,
            "description": "The Mercenaries (?) damage profile.",
            "itemtype": "property",
            "name": "mercenaries",
            "type": "esc.DamageProfile",
            "static": 1,
            "class": "esc.DamageProfile",
            "module": "esc-hp-pool",
            "namespace": "esc"
        },
        {
            "file": "shared/model/hp-pool.js",
            "line": 188,
            "description": "The Rogue Drone damage profile.",
            "itemtype": "property",
            "name": "drones",
            "type": "esc.DamageProfile",
            "static": 1,
            "class": "esc.DamageProfile",
            "module": "esc-hp-pool",
            "namespace": "esc"
        },
        {
            "file": "shared/model/hp-pool.js",
            "line": 196,
            "description": "The damage profile used by the in-game fitting tool. CCP uses a different strategy, they use the weakest of a pool's four resists to generate the EHP.",
            "itemtype": "property",
            "name": "eve",
            "type": "esc.DamageProfile",
            "static": 1,
            "class": "esc.DamageProfile",
            "module": "esc-hp-pool",
            "namespace": "esc"
        },
        {
            "file": "shared/model/hp-pool.js",
            "line": 213,
            "description": "HpPools will fall back to this damage profile if no damageProfile is provided to the instance. Defaults to the EFT profile.",
            "itemtype": "property",
            "name": "sharedDamageProfile",
            "type": "esc.DamageProfile",
            "static": 1,
            "class": "esc.DamageProfile",
            "module": "esc-hp-pool",
            "namespace": "esc"
        },
        {
            "file": "shared/model/hp-pool.js",
            "line": 244,
            "itemtype": "property",
            "name": "hp",
            "type": "Number",
            "class": "esc.HpPool",
            "module": "esc-hp-pool",
            "namespace": "esc"
        },
        {
            "file": "shared/model/hp-pool.js",
            "line": 249,
            "itemtype": "property",
            "name": "emResonance",
            "type": "Number",
            "class": "esc.HpPool",
            "module": "esc-hp-pool",
            "namespace": "esc"
        },
        {
            "file": "shared/model/hp-pool.js",
            "line": 254,
            "itemtype": "property",
            "name": "explosiveResonance",
            "type": "Number",
            "class": "esc.HpPool",
            "module": "esc-hp-pool",
            "namespace": "esc"
        },
        {
            "file": "shared/model/hp-pool.js",
            "line": 259,
            "itemtype": "property",
            "name": "kineticResonance",
            "type": "Number",
            "class": "esc.HpPool",
            "module": "esc-hp-pool",
            "namespace": "esc"
        },
        {
            "file": "shared/model/hp-pool.js",
            "line": 264,
            "itemtype": "property",
            "name": "thermalResonance",
            "type": "Number",
            "class": "esc.HpPool",
            "module": "esc-hp-pool",
            "namespace": "esc"
        },
        {
            "file": "shared/model/hp-pool.js",
            "line": 269,
            "itemtype": "property",
            "name": "damageProfile",
            "type": "esc.DamageProfile",
            "default": "null",
            "class": "esc.HpPool",
            "module": "esc-hp-pool",
            "namespace": "esc"
        },
        {
            "file": "shared/model/hp-pool.js",
            "line": 280,
            "itemtype": "property",
            "name": "emResistance",
            "type": "Number",
            "readonly": "",
            "class": "esc.HpPool",
            "module": "esc-hp-pool",
            "namespace": "esc"
        },
        {
            "file": "shared/model/hp-pool.js",
            "line": 286,
            "itemtype": "property",
            "name": "explosiveResistance",
            "type": "Number",
            "readonly": "",
            "class": "esc.HpPool",
            "module": "esc-hp-pool",
            "namespace": "esc"
        },
        {
            "file": "shared/model/hp-pool.js",
            "line": 292,
            "itemtype": "property",
            "name": "kineticResistance",
            "type": "Number",
            "readonly": "",
            "class": "esc.HpPool",
            "module": "esc-hp-pool",
            "namespace": "esc"
        },
        {
            "file": "shared/model/hp-pool.js",
            "line": 298,
            "itemtype": "property",
            "name": "thermalResistance",
            "type": "Number",
            "readonly": "",
            "class": "esc.HpPool",
            "module": "esc-hp-pool",
            "namespace": "esc"
        },
        {
            "file": "shared/model/hp-pool.js",
            "line": 304,
            "description": "The effective hit points of this damage pool, typically calculated by:\n\n`EHP = HP / (1-RST)`\n\nWhere 'HP` is the pool size and `RST` is the average damage resistance against the four damage types.\n\nSource: <http://community.eveonline.com/ingameboard.asp?a=topic&threadID=780756>",
            "itemtype": "property",
            "name": "ehp",
            "type": "Number",
            "readonly": "",
            "class": "esc.HpPool",
            "module": "esc-hp-pool",
            "namespace": "esc"
        },
        {
            "file": "shared/model/hp-pool.js",
            "line": 346,
            "description": "The amount of time it takes for the shield to go from fully discharged to fully charged in seconds.",
            "itemtype": "property",
            "name": "recharge",
            "type": "Number",
            "class": "esc.Shield",
            "module": "esc-hp-pool",
            "namespace": "esc"
        },
        {
            "file": "shared/model/hp-pool.js",
            "line": 354,
            "description": "The peak recharge rate of a shield is defined by:\n\n`R = 2.4 * S / R`\n\nWhere `R` is the recharge rate, `S` is the maximum shield size, and `R` is the recharge rate in seconds.\n\nSource: <http://wiki.eveonline.com/en/wiki/Shield_recharge>",
            "itemtype": "property",
            "name": "peakRecharge",
            "type": "Number",
            "readonly": "",
            "class": "esc.Shield",
            "module": "esc-hp-pool",
            "namespace": "esc"
        },
        {
            "file": "shared/model/ship-properties.js",
            "line": 35,
            "description": "Returns the highest of the radar strengths, since each ship really only has one radar strength type.",
            "itemtype": "property",
            "name": "strength",
            "readonly": "",
            "class": "esc.Sensors",
            "module": "esc-ship-properties",
            "namespace": "esc"
        },
        {
            "file": "shared/model/ship-properties.js",
            "line": 194,
            "description": "The maximum amount of charge the capacitor can hold.",
            "itemtype": "property",
            "name": "capacity",
            "type": "Number",
            "class": "esc.Capacitor",
            "module": "esc-ship-properties",
            "namespace": "esc"
        },
        {
            "file": "shared/model/ship-properties.js",
            "line": 198,
            "description": "The time it takes to go from fully discharged to fully charged in seconds.",
            "itemtype": "property",
            "name": "recharge",
            "type": "Number",
            "class": "esc.Capacitor",
            "module": "esc-ship-properties",
            "namespace": "esc"
        },
        {
            "file": "shared/model/ship-properties.js",
            "line": 206,
            "description": "A read-only synthetic property that's the peak recharge rate of a capacitor.\n    \nThe peak recharge of a capacitor appears to happen on or near the 25% mark and is defined by:\n\n`dC/dt = ( SQRT( Cx/Cmax ) - C/Cmax ) * 2 * Cmax / tau`\n\nWhere:\n\n* `dC/dt` is the amount the capacitor will recharge per second\n* `Cx` is the current amount of energy in the capacitor\n* `Cmax` is the total amount of energy in a fully-charged capacitor\n* `tau` is a constant that's either t/5 or t/4.8 where t is the recharge rate in seconds. (I chose 5) \n\nSource: <http://wiki.eveonline.com/en/wiki/Capacitor_recharge_rate>",
            "itemtype": "property",
            "name": "peakRecharge",
            "type": "Number",
            "readonly": "",
            "class": "esc.Capacitor",
            "module": "esc-ship-properties",
            "namespace": "esc"
        },
        {
            "file": "shared/model/ship.js",
            "line": 32,
            "description": "The ship's capacity.",
            "itemtype": "property",
            "name": "capacity",
            "type": "esc.Capacity",
            "class": "esc.Ship",
            "module": "esc-ship",
            "namespace": "esc"
        },
        {
            "file": "shared/model/ship.js",
            "line": 36,
            "description": "The ship's sensors.",
            "itemtype": "property",
            "name": "sensors",
            "type": "esc.Sensors",
            "class": "esc.Ship",
            "module": "esc-ship",
            "namespace": "esc"
        },
        {
            "file": "shared/model/ship.js",
            "line": 40,
            "description": "The ship's hardpoint slots.",
            "itemtype": "property",
            "name": "slots",
            "type": "esc.Slots",
            "class": "esc.Ship",
            "module": "esc-ship",
            "namespace": "esc"
        },
        {
            "file": "shared/model/ship.js",
            "line": 44,
            "description": "The ship's capacitor propereties.",
            "itemtype": "property",
            "name": "capacitor",
            "type": "esc.Capacitor",
            "class": "esc.Ship",
            "module": "esc-ship",
            "namespace": "esc"
        },
        {
            "file": "shared/model/ship.js",
            "line": 48,
            "description": "The ship's drones capacity.",
            "itemtype": "property",
            "name": "drones",
            "type": "esc.Drones",
            "class": "esc.Ship",
            "module": "esc-ship",
            "namespace": "esc"
        },
        {
            "file": "shared/model/ship.js",
            "line": 52,
            "description": "The ship's heat capacity.",
            "itemtype": "property",
            "name": "heat",
            "type": "esc.Heat",
            "class": "esc.Ship",
            "module": "esc-ship",
            "namespace": "esc"
        },
        {
            "file": "shared/model/ship.js",
            "line": 56,
            "description": "The ship's hull hp and durability.",
            "itemtype": "property",
            "name": "hull",
            "type": "esc.HpPool",
            "class": "esc.Ship",
            "module": "esc-ship",
            "namespace": "esc"
        },
        {
            "file": "shared/model/ship.js",
            "line": 60,
            "description": "The ship's armor hp and durability.",
            "itemtype": "property",
            "name": "armor",
            "type": "esc.HpPool",
            "class": "esc.Ship",
            "module": "esc-ship",
            "namespace": "esc"
        },
        {
            "file": "shared/model/ship.js",
            "line": 64,
            "description": "The ship's shield hp, durability, and recharge rate.",
            "itemtype": "property",
            "name": "shield",
            "type": "esc.Shield",
            "class": "esc.Ship",
            "module": "esc-ship",
            "namespace": "esc"
        },
        {
            "file": "shared/model/ship.js",
            "line": 68,
            "description": "The ship's jump drive properties (if any).",
            "itemtype": "property",
            "name": "jumpDrive",
            "type": "esc.JumpDrive",
            "class": "esc.Ship",
            "module": "esc-ship",
            "namespace": "esc"
        },
        {
            "file": "shared/model/ship.js",
            "line": 72,
            "description": "The skill requirements to sit in the seat.",
            "itemtype": "property",
            "name": "skillRequirements",
            "type": "esc.SkillRequirements",
            "class": "esc.Ship",
            "module": "esc-ship",
            "namespace": "esc"
        },
        {
            "file": "shared/model/ship.js",
            "line": 90,
            "description": "The ship's asset ID in the Eve database. This is a unique identifier.",
            "itemtype": "property",
            "name": "id",
            "type": "Number",
            "class": "esc.Ship",
            "module": "esc-ship",
            "namespace": "esc"
        },
        {
            "file": "shared/model/ship.js",
            "line": 97,
            "description": "The ship's name.",
            "itemtype": "property",
            "name": "name",
            "type": "String",
            "class": "esc.Ship",
            "module": "esc-ship",
            "namespace": "esc"
        },
        {
            "file": "shared/model/ship.js",
            "line": 104,
            "description": "The ship's type (e.g. Cruiser, Assault Ship, or Titan)",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "class": "esc.Ship",
            "module": "esc-ship",
            "namespace": "esc"
        },
        {
            "file": "shared/model/ship.js",
            "line": 111,
            "description": "The ship's description, cleaned and normalized into a chunk of HTML.",
            "itemtype": "property",
            "name": "description",
            "type": "String",
            "class": "esc.Ship",
            "module": "esc-ship",
            "namespace": "esc"
        },
        {
            "file": "shared/model/ship.js",
            "line": 118,
            "description": "The faction or race the ship belongs to. This is incorrect for pirate-faction ships.",
            "itemtype": "property",
            "name": "race",
            "type": "String",
            "class": "esc.Ship",
            "module": "esc-ship",
            "namespace": "esc"
        },
        {
            "file": "shared/model/ship.js",
            "line": 125,
            "description": "The meta-level of the item. Here's a loose collection of values and what they mean:\n\n* 0 - Tech-level 1\n* 1-4 - \"Named\" equipment, not used for ships.\n* 5 - Tech-level 2 and 3.\n* 6 - Special edition gifts or unusual craft (e.g. the echelon or zephyr)\n* 7 - ??\n* 8 - Pirate- or Navy-faction.\n* 9 - Special",
            "itemtype": "property",
            "name": "meta",
            "type": "Number",
            "class": "esc.Ship",
            "module": "esc-ship",
            "namespace": "esc"
        },
        {
            "file": "shared/model/ship.js",
            "line": 140,
            "description": "The tech level (1, 2, or 3)",
            "itemtype": "property",
            "name": "techLevel",
            "type": "Number",
            "class": "esc.Ship",
            "module": "esc-ship",
            "namespace": "esc"
        },
        {
            "file": "shared/model/ship.js",
            "line": 147,
            "description": "The signature radius",
            "itemtype": "property",
            "name": "signature",
            "type": "Number",
            "class": "esc.Ship",
            "module": "esc-ship",
            "namespace": "esc"
        },
        {
            "file": "shared/model/ship.js",
            "line": 154,
            "itemtype": "property",
            "name": "agility",
            "type": "Number",
            "class": "esc.Ship",
            "module": "esc-ship",
            "namespace": "esc"
        },
        {
            "file": "shared/model/ship.js",
            "line": 159,
            "itemtype": "property",
            "name": "velocity",
            "type": "Number",
            "class": "esc.Ship",
            "module": "esc-ship",
            "namespace": "esc"
        },
        {
            "file": "shared/model/ship.js",
            "line": 164,
            "itemtype": "property",
            "name": "warpSpeed",
            "type": "Number",
            "class": "esc.Ship",
            "module": "esc-ship",
            "namespace": "esc"
        },
        {
            "file": "shared/model/ship.js",
            "line": 169,
            "itemtype": "property",
            "name": "warpSpeedMultiplier",
            "type": "Number",
            "class": "esc.Ship",
            "module": "esc-ship",
            "namespace": "esc"
        },
        {
            "file": "shared/model/ship.js",
            "line": 174,
            "description": "The base CPU capacity.",
            "itemtype": "property",
            "name": "cpu",
            "type": "Number",
            "class": "esc.Ship",
            "module": "esc-ship",
            "namespace": "esc"
        },
        {
            "file": "shared/model/ship.js",
            "line": 181,
            "description": "The base power grid.",
            "itemtype": "property",
            "name": "powerGrid",
            "type": "Number",
            "class": "esc.Ship",
            "module": "esc-ship",
            "namespace": "esc"
        },
        {
            "file": "shared/model/ship.js",
            "line": 188,
            "description": "Override for the toString method.",
            "itemtype": "method",
            "name": "toString",
            "class": "esc.Ship",
            "module": "esc-ship",
            "namespace": "esc"
        },
        {
            "file": "shared/model/skill.js",
            "line": 32,
            "description": "The ID of the skill in the Eve database.",
            "itemtype": "property",
            "name": "id",
            "type": "Number",
            "class": "esc.Skill",
            "module": "esc-skill",
            "namespace": "esc"
        },
        {
            "file": "shared/model/skill.js",
            "line": 39,
            "description": "The name of the skill.",
            "itemtype": "property",
            "name": "name",
            "type": "String",
            "class": "esc.Skill",
            "module": "esc-skill",
            "namespace": "esc"
        },
        {
            "file": "shared/model/skill.js",
            "line": 46,
            "description": "The description of the skill.",
            "itemtype": "property",
            "name": "description",
            "type": "String",
            "class": "esc.Skill",
            "module": "esc-skill",
            "namespace": "esc"
        },
        {
            "file": "shared/model/skill.js",
            "line": 53,
            "description": "The group this skill belongs to.",
            "itemtype": "property",
            "name": "group",
            "type": "String",
            "class": "esc.Skill",
            "module": "esc-skill",
            "namespace": "esc"
        },
        {
            "file": "shared/model/skill.js",
            "line": 60,
            "description": "The rank of the skill.",
            "itemtype": "property",
            "name": "rank",
            "type": "Number",
            "class": "esc.Skill",
            "module": "esc-skill",
            "namespace": "esc"
        },
        {
            "file": "shared/model/skill.js",
            "line": 67,
            "description": "The prereqs for this skill.",
            "itemtype": "property",
            "name": "requirements",
            "type": "Array",
            "class": "esc.Skill",
            "module": "esc-skill",
            "namespace": "esc"
        },
        {
            "file": "shared/model/skill.js",
            "line": 88,
            "description": "The ID of the skill that is required.",
            "itemtype": "property",
            "name": "id",
            "type": "Number",
            "class": "esc.SkillRequirement",
            "module": "esc-skill",
            "namespace": "esc"
        },
        {
            "file": "shared/model/skill.js",
            "line": 95,
            "description": "The level of the skill that is required.",
            "itemtype": "property",
            "name": "level",
            "type": "Number",
            "class": "esc.SkillRequirement",
            "module": "esc-skill",
            "namespace": "esc"
        },
        {
            "file": "shared/model/skill.js",
            "line": 101,
            "description": "The resolved skill that is required.",
            "itemtype": "property",
            "name": "skill",
            "type": "esc.Skill",
            "class": "esc.SkillRequirement",
            "module": "esc-skill",
            "namespace": "esc"
        },
        {
            "file": "shared/model/skill.js",
            "line": 133,
            "itemtype": "property",
            "name": "skills",
            "type": "Array",
            "class": "esc.SkillRequirements",
            "module": "esc-skill",
            "namespace": "esc"
        },
        {
            "file": "shared/model/skill.js",
            "line": 141,
            "itemtype": "property",
            "name": "primary",
            "type": "esc.SkillRequirement",
            "class": "esc.SkillRequirements",
            "module": "esc-skill",
            "namespace": "esc"
        },
        {
            "file": "shared/model/skill.js",
            "line": 156,
            "itemtype": "property",
            "name": "secondary",
            "type": "esc.SkillRequirement",
            "class": "esc.SkillRequirements",
            "module": "esc-skill",
            "namespace": "esc"
        },
        {
            "file": "shared/model/skill.js",
            "line": 171,
            "itemtype": "property",
            "name": "tertiary",
            "type": "esc.SkillRequirement",
            "class": "esc.SkillRequirements",
            "module": "esc-skill",
            "namespace": "esc"
        },
        {
            "file": "shared/utils/micro-template.js",
            "line": 17,
            "itemtype": "property",
            "name": "OPTIONS",
            "static": 1,
            "class": "esc.MicroTemplate",
            "module": "esc-micro-template",
            "namespace": "esc"
        },
        {
            "file": "shared/utils/micro-template.js",
            "line": 28,
            "itemtype": "property",
            "name": "TEMPLATE_ESCAPE",
            "static": 1,
            "class": "esc.MicroTemplate",
            "module": "esc-micro-template",
            "namespace": "esc"
        },
        {
            "file": "shared/utils/micro-template.js",
            "line": 41,
            "itemtype": "property",
            "name": "STRING_ESCAPE",
            "static": 1,
            "class": "esc.MicroTemplate",
            "module": "esc-micro-template",
            "namespace": "esc"
        },
        {
            "file": "shared/utils/micro-template.js",
            "line": 55,
            "itemtype": "method",
            "name": "escape",
            "static": 1,
            "params": [
                {
                    "name": "s",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "esc.MicroTemplate",
            "module": "esc-micro-template",
            "namespace": "esc"
        },
        {
            "file": "shared/utils/micro-template.js",
            "line": 67,
            "itemtype": "method",
            "name": "render",
            "static": 1,
            "params": [
                {
                    "name": "text",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "esc.MicroTemplate",
            "module": "esc-micro-template",
            "namespace": "esc"
        },
        {
            "file": "shared/utils/micro-template.js",
            "line": 78,
            "itemtype": "method",
            "name": "include",
            "static": 1,
            "params": [
                {
                    "name": "path",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "esc.MicroTemplate",
            "module": "esc-micro-template",
            "namespace": "esc"
        },
        {
            "file": "shared/utils/micro-template.js",
            "line": 88,
            "itemtype": "method",
            "name": "compile",
            "static": 1,
            "params": [
                {
                    "name": "text",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "precompile",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "String|Function"
            },
            "class": "esc.MicroTemplate",
            "module": "esc-micro-template",
            "namespace": "esc"
        },
        {
            "file": "shared/utils/micro-template.js",
            "line": 154,
            "itemtype": "method",
            "name": "precompile",
            "static": 1,
            "params": [
                {
                    "name": "text",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "esc.MicroTemplate",
            "module": "esc-micro-template",
            "namespace": "esc"
        },
        {
            "file": "shared/utils/micro-template.js",
            "line": 164,
            "itemtype": "method",
            "name": "revive",
            "static": 1,
            "params": [
                {
                    "name": "precompiled",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "UNKNOWN",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "esc.MicroTemplate",
            "module": "esc-micro-template",
            "namespace": "esc"
        },
        {
            "file": "shared/utils/promise.js",
            "line": 61,
            "description": "Schedule execution of a callback to either or both of \"fulfill\" and\n\"reject\" resolutions for this promise. The callbacks are wrapped in a new\npromise and that promise is returned.  This allows operation chaining ala\n`functionA().then(functionB).then(functionC)` where `functionA` returns\na promise, and `functionB` and `functionC` _may_ return promises.\n\nAsynchronicity of the callbacks is guaranteed.",
            "itemtype": "method",
            "name": "then",
            "params": [
                {
                    "name": "callback",
                    "description": "function to execute if the promise\nresolves successfully",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "errback",
                    "description": "function to execute if the promise\nresolves unsuccessfully",
                    "type": "Function",
                    "optional": true
                }
            ],
            "return": {
                "description": "A promise wrapping the resolution of either \"resolve\" or\n\"reject\" callback",
                "type": "Promise"
            },
            "class": "esc.Promise",
            "module": "esc-promise",
            "namespace": "esc"
        },
        {
            "file": "shared/utils/promise.js",
            "line": 82,
            "description": "Returns the current status of the operation. Possible results are\n\"pending\", \"fulfilled\", and \"rejected\".",
            "itemtype": "method",
            "name": "getStatus",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "esc.Promise",
            "module": "esc-promise",
            "namespace": "esc"
        },
        {
            "file": "shared/utils/promise.js",
            "line": 96,
            "description": "Checks if an object or value is a promise. This is cross-implementation\ncompatible, so promises returned from other libraries or native components\nthat are compatible with the Promises A+ spec should be recognized by this\nmethod.",
            "itemtype": "method",
            "name": "isPromise",
            "params": [
                {
                    "name": "obj",
                    "description": "The object to test",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "Whether the object is a promise or not",
                "type": "Boolean"
            },
            "static": 1,
            "class": "esc.Promise",
            "module": "esc-promise",
            "namespace": "esc"
        },
        {
            "file": "shared/utils/promise.js",
            "line": 126,
            "description": "The promise for this Resolver.",
            "itemtype": "property",
            "name": "promise",
            "type": "Promise",
            "class": "esc.Promise.Resolver",
            "module": "esc-promise",
            "namespace": "esc"
        },
        {
            "file": "shared/utils/promise.js",
            "line": 134,
            "description": "The status of the operation.",
            "itemtype": "property",
            "name": "_status",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "esc.Promise.Resolver",
            "module": "esc-promise",
            "namespace": "esc"
        },
        {
            "file": "shared/utils/promise.js",
            "line": 145,
            "description": "Resolves the promise, signaling successful completion of the\nrepresented operation. All \"onFulfilled\" subscriptions are executed and passed\nthe value provided to this method. After calling `fulfill()`, `reject()` and\n`notify()` are disabled.",
            "itemtype": "method",
            "name": "fulfill",
            "params": [
                {
                    "name": "value",
                    "description": "Value to pass along to the \"onFulfilled\" subscribers",
                    "type": "Any"
                }
            ],
            "class": "esc.Promise.Resolver",
            "module": "esc-promise",
            "namespace": "esc"
        },
        {
            "file": "shared/utils/promise.js",
            "line": 169,
            "description": "Resolves the promise, signaling *un*successful completion of the\nrepresented operation. All \"onRejected\" subscriptions are executed with\nthe value provided to this method. After calling `reject()`, `resolve()`\nand `notify()` are disabled.",
            "itemtype": "method",
            "name": "reject",
            "params": [
                {
                    "name": "value",
                    "description": "Value to pass along to the \"reject\" subscribers",
                    "type": "Any"
                }
            ],
            "class": "esc.Promise.Resolver",
            "module": "esc-promise",
            "namespace": "esc"
        },
        {
            "file": "shared/utils/promise.js",
            "line": 193,
            "description": "Schedule execution of a callback to either or both of \"resolve\" and\n\"reject\" resolutions for the Resolver.  The callbacks\nare wrapped in a new Resolver and that Resolver's corresponding promise\nis returned.  This allows operation chaining ala\n`functionA().then(functionB).then(functionC)` where `functionA` returns\na promise, and `functionB` and `functionC` _may_ return promises.",
            "itemtype": "method",
            "name": "then",
            "params": [
                {
                    "name": "callback",
                    "description": "function to execute if the Resolver\nresolves successfully",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "errback",
                    "description": "function to execute if the Resolver\nresolves unsuccessfully",
                    "type": "Function",
                    "optional": true
                }
            ],
            "return": {
                "description": "The promise of a new Resolver wrapping the resolution\nof either \"resolve\" or \"reject\" callback",
                "type": "Promise"
            },
            "class": "esc.Promise.Resolver",
            "module": "esc-promise",
            "namespace": "esc"
        },
        {
            "file": "shared/utils/promise.js",
            "line": 288,
            "description": "Returns the current status of the Resolver as a string \"pending\",\n\"fulfilled\", or \"rejected\".",
            "itemtype": "method",
            "name": "getStatus",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "esc.Promise.Resolver",
            "module": "esc-promise",
            "namespace": "esc"
        },
        {
            "file": "shared/utils/promise.js",
            "line": 299,
            "description": "Returns the result of the Resolver.  Use `getStatus()` to test that the\npromise is fulfilled before calling this.",
            "itemtype": "method",
            "name": "getResult",
            "return": {
                "description": "Value passed to `resolve()` or `reject()`",
                "type": "Any"
            },
            "class": "esc.Promise.Resolver",
            "module": "esc-promise",
            "namespace": "esc"
        },
        {
            "file": "shared/utils/promise.js",
            "line": 310,
            "description": "Executes an array of callbacks from a specified context, passing a set of\narguments.",
            "itemtype": "method",
            "name": "_notify",
            "params": [
                {
                    "name": "subs",
                    "description": "The array of subscriber callbacks",
                    "type": "Function[]"
                },
                {
                    "name": "result",
                    "description": "Value to pass the callbacks",
                    "type": "Any"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "esc.Promise.Resolver",
            "module": "esc-promise",
            "namespace": "esc"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " server/lib/select.js:59"
        },
        {
            "message": "param name missing: {String}",
            "line": " shared/utils/micro-template.js:164"
        }
    ]
}